// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: proto/transfer.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Chunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       []byte                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Checksum      string                 `protobuf:"bytes,2,opt,name=checksum,proto3" json:"checksum,omitempty"` // SHA-256 hash
	Index         int32                  `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`      // Chunk position
	Filename      string                 `protobuf:"bytes,4,opt,name=filename,proto3" json:"filename,omitempty"` // Original filename
	TotalChunks   int32                  `protobuf:"varint,5,opt,name=total_chunks,json=totalChunks,proto3" json:"total_chunks,omitempty"`
	FileId        string                 `protobuf:"bytes,6,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"` // Unique transfer ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Chunk) Reset() {
	*x = Chunk{}
	mi := &file_proto_transfer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Chunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chunk) ProtoMessage() {}

func (x *Chunk) ProtoReflect() protoreflect.Message {
	mi := &file_proto_transfer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chunk.ProtoReflect.Descriptor instead.
func (*Chunk) Descriptor() ([]byte, []int) {
	return file_proto_transfer_proto_rawDescGZIP(), []int{0}
}

func (x *Chunk) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *Chunk) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

func (x *Chunk) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Chunk) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *Chunk) GetTotalChunks() int32 {
	if x != nil {
		return x.TotalChunks
	}
	return 0
}

func (x *Chunk) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

type Ack struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ack) Reset() {
	*x = Ack{}
	mi := &file_proto_transfer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ack) ProtoMessage() {}

func (x *Ack) ProtoReflect() protoreflect.Message {
	mi := &file_proto_transfer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ack.ProtoReflect.Descriptor instead.
func (*Ack) Descriptor() ([]byte, []int) {
	return file_proto_transfer_proto_rawDescGZIP(), []int{1}
}

func (x *Ack) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *Ack) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type HealthRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthRequest) Reset() {
	*x = HealthRequest{}
	mi := &file_proto_transfer_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthRequest) ProtoMessage() {}

func (x *HealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_transfer_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthRequest.ProtoReflect.Descriptor instead.
func (*HealthRequest) Descriptor() ([]byte, []int) {
	return file_proto_transfer_proto_rawDescGZIP(), []int{2}
}

type HealthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ready         bool                   `protobuf:"varint,1,opt,name=ready,proto3" json:"ready,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthResponse) Reset() {
	*x = HealthResponse{}
	mi := &file_proto_transfer_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponse) ProtoMessage() {}

func (x *HealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_transfer_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponse.ProtoReflect.Descriptor instead.
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return file_proto_transfer_proto_rawDescGZIP(), []int{3}
}

func (x *HealthResponse) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

var File_proto_transfer_proto protoreflect.FileDescriptor

const file_proto_transfer_proto_rawDesc = "" +
	"\n" +
	"\x14proto/transfer.proto\x12\btransfer\"\xab\x01\n" +
	"\x05Chunk\x12\x18\n" +
	"\acontent\x18\x01 \x01(\fR\acontent\x12\x1a\n" +
	"\bchecksum\x18\x02 \x01(\tR\bchecksum\x12\x14\n" +
	"\x05index\x18\x03 \x01(\x05R\x05index\x12\x1a\n" +
	"\bfilename\x18\x04 \x01(\tR\bfilename\x12!\n" +
	"\ftotal_chunks\x18\x05 \x01(\x05R\vtotalChunks\x12\x17\n" +
	"\afile_id\x18\x06 \x01(\tR\x06fileId\"9\n" +
	"\x03Ack\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x0f\n" +
	"\rHealthRequest\"&\n" +
	"\x0eHealthResponse\x12\x14\n" +
	"\x05ready\x18\x01 \x01(\bR\x05ready2\x81\x01\n" +
	"\fFileTransfer\x12-\n" +
	"\tSendChunk\x12\x0f.transfer.Chunk\x1a\r.transfer.Ack\"\x00\x12B\n" +
	"\vHealthCheck\x12\x17.transfer.HealthRequest\x1a\x18.transfer.HealthResponse\"\x00B1Z/github.com/kapishupadhyay22/SwiftTransfer/protob\x06proto3"

var (
	file_proto_transfer_proto_rawDescOnce sync.Once
	file_proto_transfer_proto_rawDescData []byte
)

func file_proto_transfer_proto_rawDescGZIP() []byte {
	file_proto_transfer_proto_rawDescOnce.Do(func() {
		file_proto_transfer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_transfer_proto_rawDesc), len(file_proto_transfer_proto_rawDesc)))
	})
	return file_proto_transfer_proto_rawDescData
}

var file_proto_transfer_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_transfer_proto_goTypes = []any{
	(*Chunk)(nil),          // 0: transfer.Chunk
	(*Ack)(nil),            // 1: transfer.Ack
	(*HealthRequest)(nil),  // 2: transfer.HealthRequest
	(*HealthResponse)(nil), // 3: transfer.HealthResponse
}
var file_proto_transfer_proto_depIdxs = []int32{
	0, // 0: transfer.FileTransfer.SendChunk:input_type -> transfer.Chunk
	2, // 1: transfer.FileTransfer.HealthCheck:input_type -> transfer.HealthRequest
	1, // 2: transfer.FileTransfer.SendChunk:output_type -> transfer.Ack
	3, // 3: transfer.FileTransfer.HealthCheck:output_type -> transfer.HealthResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_transfer_proto_init() }
func file_proto_transfer_proto_init() {
	if File_proto_transfer_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_transfer_proto_rawDesc), len(file_proto_transfer_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_transfer_proto_goTypes,
		DependencyIndexes: file_proto_transfer_proto_depIdxs,
		MessageInfos:      file_proto_transfer_proto_msgTypes,
	}.Build()
	File_proto_transfer_proto = out.File
	file_proto_transfer_proto_goTypes = nil
	file_proto_transfer_proto_depIdxs = nil
}
